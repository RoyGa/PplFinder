{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","pages/Favorites/style.js","pages/Favorites/Favorites.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","UserWrapper","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","TextFieldWrapper","FavoriteButton","onFavoriteClicked","onClick","IconButton","onChecked","CommentButton","type","onExpand","CollapsedComment","index","expand","onBlured","comment","Collapse","in","style","marginTop","padding","TextField","onBlur","e","defaultValue","width","users","isLoading","onCountryFilterChanged","onReachedBottom","allFavorites","onAddComment","useState","hoveredUserId","setHoveredUserId","favorites","setFavorites","countries","setCountries","expandUserId","setExpandUserId","usersList","useRef","useEffect","current","addEventListener","isBottom","handleMouseLeave","scrollHeight","offsetHeight","scrollTop","handleFavoriteClicked","updatedFavorites","includes","filter","handleBlured","target","country","ref","map","user","isFavorite","isCommentIconVisible","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","location","street","number","city","handleShowComment","Home","Content","Header","setUsers","setIsLoading","fetchUsers","a","overwrite","params","nat","join","axios","get","response","updatedUsers","data","results","usePeopleFetch","page","setPage","JSON","parse","window","localStorage","getItem","isInFavorites","userIdx","find","login","uuid","newCountries","setItem","stringify","ThemeProvider","darkMode","palletType","backgroundColor","overrides","MuiTab","root","MuiCheckbox","colorPrimary","MuiCssBaseline","background","backgroundClip","border","theme","React","useMemo","createMuiTheme","palette","primary","main","secondary","error","CssBaseline","NavBar","onToggleTheme","setValue","setDarkMode","history","useHistory","pageIndex","pageRoutes","route","push","AppBar","position","top","display","flexDirection","justifyContent","Tabs","_e","newValue","aria-label","indicatorColor","Tab","FormGroup","Switch","inputProps","margin","Favorites","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a368dd2b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const UserWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 170px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n  margin: auto;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n\r\nexport const TextFieldWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport { Collapse, TextField } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({\r\n  users,\r\n  isLoading,\r\n  onCountryFilterChanged,\r\n  onFavoriteClicked,\r\n  onReachedBottom,\r\n  allFavorites,\r\n  onAddComment\r\n}) => {\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n  const [favorites, setFavorites] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [expandUserId, setExpandUserId] = useState();\r\n\r\n  const usersList = useRef(null);\r\n\r\n  useEffect(() => {\r\n    usersList.current.addEventListener('scroll', () => {\r\n      isBottom() && onReachedBottom();\r\n    }); \r\n  }, [users]);\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  const isBottom = () => {\r\n    const {\r\n      scrollHeight,\r\n      offsetHeight,\r\n      scrollTop\r\n    } = usersList.current;\r\n\r\n    return scrollHeight - offsetHeight === scrollTop;\r\n  };\r\n\r\n  const handleChecked = (value) => {\r\n    const checked = countries.includes(value)\r\n    ? countries.filter(country => country !== value)\r\n    : [...countries, value];\r\n    \r\n    setCountries(checked);\r\n    onCountryFilterChanged(checked);\r\n\r\n    usersList.current.scrollTop = 0;\r\n  };\r\n\r\n  const handleFavoriteClicked = () => {\r\n    const updatedFavorites = favorites.includes(hoveredUserId)\r\n    ? favorites.filter(index => index !== hoveredUserId)\r\n    : [...favorites, hoveredUserId];\r\n\r\n    setFavorites(updatedFavorites);\r\n    \r\n    onFavoriteClicked(hoveredUserId);\r\n  };\r\n  \r\n  const handleBlured = (e, index) => {\r\n    const comment = e.target.value;\r\n    onAddComment(index, comment);\r\n  };\r\n\r\n  const handleShowComment = (index) => {\r\n    const userIdToExpand = expandUserId === index ? null : index;\r\n    setExpandUserId(userIdToExpand);\r\n  };\r\n  \r\n  return (\r\n    <S.UserList>\r\n      {allFavorites ? null : <Filters onChecked={handleChecked} />}\r\n      <S.List ref={usersList} >\r\n        {users.map((user, index) => {\r\n          const isFavorite = index === hoveredUserId\r\n          || allFavorites\r\n          || favorites.includes(index);\r\n\r\n          const isCommentIconVisible = user.comment\r\n          || index === hoveredUserId\r\n          || index === expandUserId;\r\n          \r\n          const comment = user.comment\r\n          ? user.comment\r\n          : \"Add a comment...\";\r\n\r\n          return (\r\n            <S.UserWrapper key={index}>\r\n              <S.User\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                {allFavorites && (\r\n                  <CommentButton\r\n                    isVisible={isCommentIconVisible}\r\n                    type={index === expandUserId}\r\n                    onExpand={() => handleShowComment(index)}\r\n                  />\r\n                )}\r\n                <FavoriteButton\r\n                  isVisible={isFavorite}\r\n                  onFavoriteClicked={handleFavoriteClicked}\r\n                />\r\n              </S.User>\r\n              {allFavorites && (\r\n                <CollapsedComment\r\n                  index={index}\r\n                  expand={index === expandUserId}\r\n                  onBlured={handleBlured}\r\n                  comment={comment}\r\n                />\r\n              )}\r\n            </S.UserWrapper>\r\n          );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nconst FavoriteButton = ({ isVisible, onFavoriteClicked }) => (\r\n  <S.IconButtonWrapper\r\n    isVisible={isVisible}\r\n    onClick={onFavoriteClicked}\r\n  >\r\n    <IconButton>\r\n      <FavoriteIcon color=\"error\" />\r\n    </IconButton>\r\n  </S.IconButtonWrapper>\r\n);\r\n\r\nconst Filters = ({ onChecked }) => (\r\n  <S.Filters>\r\n    <CheckBox value=\"BR\" label=\"Brazil\" onChange={onChecked} />\r\n    <CheckBox value=\"AU\" label=\"Australia\" onChange={onChecked} />\r\n    <CheckBox value=\"CA\" label=\"Canada\" onChange={onChecked} />\r\n    <CheckBox value=\"DE\" label=\"Germany\" onChange={onChecked} />\r\n    <CheckBox value=\"ES\" label=\"Spain\" onChange={onChecked} />\r\n  </S.Filters>\r\n);\r\n\r\nconst CommentButton = ({ isVisible, type, onExpand }) => {\r\n  return (\r\n    <S.IconButtonWrapper isVisible={isVisible} >\r\n      <IconButton onClick={onExpand}>\r\n        {type ? <SaveIcon /> : <AddCommentIcon />}\r\n      </IconButton>\r\n    </S.IconButtonWrapper>\r\n  );\r\n};\r\n\r\nconst CollapsedComment = ({ index, expand, onBlured, comment }) => {\r\n  return (\r\n    <Collapse in={expand} >\r\n      <S.TextFieldWrapper style={{ marginTop: \"20px\", padding:\"14px\" }}>\r\n        <TextField\r\n          onBlur={(e) => onBlured(e, index)}\r\n          label=\"Comment\"\r\n          variant=\"outlined\"\r\n          defaultValue={comment}\r\n          style={{ width:\"100%\" }}\r\n        />\r\n      </S.TextFieldWrapper>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const { users, isLoading, fetchUsers } = usePeopleFetch();\r\n  const [countries, setCountries] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [favorites, setFavorites] = useState();\r\n\r\n  useEffect(() => {\r\n    setFavorites(JSON.parse(window.localStorage.getItem('favorites')) || []);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchUsers({ countries });\r\n  }, [page]);\r\n\r\n  const handleCountriesFilterChanged = (newCountries) => {\r\n    fetchUsers({\r\n      countries: newCountries,\r\n      overwrite: true\r\n    });\r\n  \r\n    setCountries(newCountries);\r\n  };\r\n\r\n  const handleFavoriteClicked = (userIdx) => {\r\n    const updatedFavorites = isInFavorites(userIdx)\r\n    ? favorites.filter(user => user.login.uuid !== users[userIdx].login.uuid)\r\n    : [...favorites, users[userIdx]];\r\n\r\n    setFavorites(updatedFavorites);\r\n    window.localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const isInFavorites = (userIdx) => \r\n    favorites.find(user => user.login.uuid === users[userIdx].login.uuid);\r\n\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList\r\n          users={users}\r\n          isLoading={isLoading}\r\n          onCountryFilterChanged={handleCountriesFilterChanged}\r\n          onFavoriteClicked={handleFavoriteClicked}\r\n          onReachedBottom={() => setPage(page + 1)}\r\n        />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  async function fetchUsers({ countries, overwrite } = {}) {\r\n    setIsLoading(true);\r\n    \r\n    const params = {\r\n      nat: countries ? countries.join(',') : null,\r\n    };\r\n    \r\n    const response = await axios.get(`https://randomuser.me/api/?results=25`, { params });\r\n\r\n    const updatedUsers = overwrite\r\n    ? response.data.results\r\n    : [...users, ...response.data.results];\r\n\r\n    setUsers(updatedUsers);\r\n\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children, darkMode }) => {\r\n  const palletType = darkMode ? \"dark\" : \"light\";\r\n  const backgroundColor = darkMode ? \"#303030\" : \"#FAFAFA\";\r\n  const color = darkMode ? \"#84ffff\" : \"#757575\"; \r\n\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor,\r\n      },\r\n    },\r\n    MuiCheckbox: {\r\n      colorPrimary: {\r\n        color,\r\n        '&$checked': {\r\n          color,\r\n        },\r\n      },\r\n    },\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '*::-webkit-scrollbar-track': {\r\n          backgroundColor,\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          background: color,\r\n          backgroundClip: \"padding-box\",\r\n          border: \"7px solid transparent\",\r\n        },     \r\n      }\r\n    }\r\n  };\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: palletType,\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          secondary: {\r\n            main: \"#757575\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    [palletType]\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { useHistory } from \"react-router\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { FormControlLabel, FormGroup, FormLabel } from \"@material-ui/core\";\r\n\r\nconst NavBar = ({ onToggleTheme }) => {\r\n  const [value, setValue] = useState(0);\r\n  const [darkMode, setDarkMode] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const pageIndex = {\r\n    home: 0,\r\n    favorites: 1,\r\n  };\r\n\r\n  const pageRoutes = {\r\n    home: '/',\r\n    favorites: '/favorites',\r\n  };\r\n\r\n  useEffect(() => {\r\n    const route = value === pageIndex.home\r\n    ? pageRoutes.home\r\n    : pageRoutes.favorites;\r\n\r\n    history.push(route);\r\n  }, [value]);\r\n\r\n  const handleChange = (_e, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const onToggleDarkMode = () => {\r\n    onToggleTheme(!darkMode);\r\n    setDarkMode(!darkMode);\r\n  };\r\n  \r\n  const appBarStyle = {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"transparent\" style={appBarStyle}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor={darkMode ? \"primary\" : \"secondary\"}\r\n        // textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} />\r\n        <Tab label=\"Favorites\" index={1} />\r\n      </Tabs>\r\n      <FormGroup>\r\n        <FormControlLabel control={\r\n          <Switch\r\n            checked={darkMode}\r\n            onChange={onToggleDarkMode}\r\n            name=\"checkDarkMode\"\r\n            color=\"primary\"\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n          }\r\n          label=\"Dark Mode\"\r\n          style={{margin:\"auto 20px\"}}\r\n        />  \r\n      </FormGroup>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Favorites = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Favorites = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    setFavorites(JSON.parse(window.localStorage.getItem('favorites')) || []);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const handleFavoriteClicked = (userIdx) => {\r\n    const updatedFavorites = favorites\r\n    .filter(\r\n      user =>\r\n      user.login.uuid !== favorites[userIdx].login.uuid\r\n    );\r\n    setIsLoading(true);\r\n    setFavorites(updatedFavorites);\r\n    setIsLoading(false);\r\n    window.localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  const handleAddComment = (userIdx, comment) => {\r\n    const updatedFavorites = [...favorites];\r\n    updatedFavorites[userIdx] = {\r\n      ...favorites[userIdx],\r\n      comment\r\n    };\r\n\r\n    setIsLoading(true);\r\n    setFavorites(updatedFavorites);\r\n    setIsLoading(false);\r\n    window.localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  return (\r\n    <S.Favorites>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            Favorites\r\n          </Text>\r\n        </S.Header>\r\n        <UserList\r\n          users={favorites}\r\n          isLoading={isLoading}\r\n          onFavoriteClicked={handleFavoriteClicked}\r\n          onReachedBottom={() => setPage(page + 1)}\r\n          allFavorites\r\n          onAddComment={handleAddComment}\r\n        />\r\n      </S.Content>\r\n    </S.Favorites>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useState } from \"react\";\r\nimport { HashRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { Home } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\nimport Favorites from \"pages/Favorites\"\r\n\r\nconst AppRouter = () => {\r\n  const [darkMode, setDarkMode] = useState(true);\r\n\r\n  const handleToggleTheme = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider darkMode={darkMode}>\r\n      <Router>\r\n        <NavBar onToggleTheme={handleToggleTheme} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}